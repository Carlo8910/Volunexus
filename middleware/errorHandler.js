const { MongoError } = require(\\\'mongodb\\\');\\n\\n/**\\n * Centralized error handling middleware.\\n */\\nfunction errorHandler(err, req, res, next) {\\n  console.error(\\\"--- Central Error Handler ---\\\");\\n  console.error(\\\"Timestamp:\\\", new Date().toISOString());\\n  console.error(\\\"Route:\\\", req.method, req.originalUrl);\\n  console.error(\\\"Error Status:\\\", err.status || 500);\\n  console.error(\\\"Error Message:\\\", err.message);\\n  console.error(\\\"Stack Trace:\\\", err.stack);\\n  console.error(\\\"--- End Error ---\\\");\\n\\n  // Determine the status code\\n  const statusCode = err.status || 500;\\n\\n  // Handle specific error types\\n  let friendlyMessage = \\\'An unexpected error occurred on the server.\\\';\\n  if (err instanceof mongoose.Error.ValidationError) {\\n    statusCode = 400; // Bad Request\\n    friendlyMessage = \\\'Validation failed. Please check your input.\\\';\\n    // Optionally extract specific validation messages\\n    // friendlyMessage = Object.values(err.errors).map(e => e.message).join(\\\', \\\');\\n  } else if (err instanceof mongoose.Error.CastError) {\\n    statusCode = 400;\\n    friendlyMessage = `Invalid format for resource ID: ${err.value}`;\\n  } else if (err instanceof MongoError && err.code === 11000) {\\n    statusCode = 409; // Conflict\\n    friendlyMessage = \\\'Duplicate key error. A resource with this value already exists.\\\';\\n  } else if (statusCode === 404) {\\n    friendlyMessage = err.message || \\\'The requested resource could not be found.\\\';\\n  } else if (statusCode === 401) {\\n    friendlyMessage = err.message || \\\'Authentication required. Please log in.\\\';\\n  } else if (statusCode === 403) {\\n    friendlyMessage = err.message || \\\'You do not have permission to access this resource.\\\';\\n  }\\n\\n  // Set locals for error view, if rendering HTML\\n  res.locals.error = {\\n    status: statusCode,\\n    message: friendlyMessage,\\n    // Provide stack trace only in development\\n    stack: process.env.NODE_ENV === \\\'development\\\' ? err.stack : undefined\\n  };\\n\\n  res.status(statusCode);\\n\\n  // Respond appropriately based on request type\\n  if (req.accepts(\\\'html\\\')) {\\n    // Render the error page\\n    res.render(\`error/${statusCode >= 500 ? \\\'500\\\' : \\\'general\\\'}\`, { \\n      layout: \\\'main\\\', // Or a specific error layout\\n      message: friendlyMessage, \\n      status: statusCode, \\n      stack: res.locals.error.stack // Pass stack for development view\\n    });\\n  } else if (req.accepts(\\\'json\\\')) {\\n    // Send JSON response\\n    res.json({\\n      success: false,\\n      status: statusCode,\\n      message: friendlyMessage,\\n      ...(process.env.NODE_ENV === \\\'development\\\' && { stack: err.stack }) // Include stack in dev\\n    });\\n  } else {\\n    // Send plain text response\\n    res.type(\\\'txt\\\').send(`${statusCode}: ${friendlyMessage}`);\\n  }\\n}\\n\\nmodule.exports = errorHandler;\\n 